# イベント処理(パフォーマンス・チューニング)
events {
  worker_connections 2048; # 「nginx」全体の接続数
  multi_accept on; # リクエストを同時に受け付けられる
  use epoll; # コネクションの処理方法(Linuxカーネル2.6以上の場合はepoll)
}

# httpモジュールの設定
http {
  charset UTF-8; # レスポンスヘッダのContent-typeを指定

  # プロキシ先の指定
  # Nginxが受け取ったリクエストをバックエンドのpumaに送信
  upstream backend {
    # ソケット通信したいのでpuma.sockを指定
    server unix:///app/tmp/sockets/puma.sock;
  }

  server {
    # nginxが待ち受けしたいポートを指定
    listen 80 default; # IPとポートを指定
    server_name localhost; # サーバ名を

    access_log /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log;
    error_page 404             /404.html;
    error_page 505 502 503 504 /500.html;
    keepalive_timeout 5;

    location / {
      root /var/www/html/dist; # ドキュメントルートを指定
      index index.html;
    }

    location /api {
      proxy_pass http://backend;# リクエスト転送先の設定
    }
  }
}